---
- hosts: all
  gather_facts: true
  become: yes
  become_method: sudo
  tasks:
    - name: updating all hosts
      apt:
        update_cache: yes
    - name: sudo wait
      become: yes
      shell: while sudo fuser /var/lib/dpkg/lock >/dev/null 2>&1; do sleep 5; done;

- hosts: HAproxy
  become: yes
  become_method: sudo
  tasks:
    - name: apt update
      apt:
        update_cache: yes
    - name: Install HAProxy load balancer
      apt:
        name: haproxy
        state: latest
    - name: HAProxy configuration
      template:
        src: haproxy.cfg.j2
        dest: /etc/haproxy/haproxy.cfg
      notify:
        - Restart HAProxy

  handlers:
    - name: Restart HAProxy
      service:
        name: haproxy
        state: restarted
    - name: apt update
      apt:
        update_cache: true
    - name: Installing keepalived
      apt:
        name: keepalived
        state: present
        update_cache: true
    - name: Restart keepalived
      service:
        name: keepalived
        state: restarted
    - name: apt update
      apt:
        update_cache: true
    - name: Installing Nginx
      apt:
        name: nginx
        update_cache: yes
        state: latest
    - name: Installing snmp, snmp-mibs-downloader
      apt:
        update_cache: yes
        name:
          - snmp
          - snmp-mibs-downloader
        state: latest
    - name: configure nginx udp port
      template:
        src: nginx.conf.j2
        dest: /etc/nginx/sites-available/default
    - name: configure udp for loadbalancing
      template:
        src: nginx.conf.j2
        dest: /etc/nginx/nginx.conf
    - name: Restart Nginx
      service:
        name: nginx
        state: restarted
    - name: apt update
      apt:
        update_cache: true

- hosts: HAproxy
  become: yes
  tasks:
    - name: Install Keepalived
      apt:
        name: keepalived
        state: present
    - name: Copy Keepalived configuration
      copy:
        src: keepalived.conf.j2
        dest: /etc/keepalived/keepalived.conf
      notify:
        - Restart Keepalived

  handlers:
    - name: Restart Keepalived
      service:
        name: keepalived
        state: restarted

- hosts: webservers
  become: yes
  tasks:
    - name: install pip
      apt:
        name: python3-pip
        state: present
    
    - name: install flask
      pip:
        executable: pip3
        name: flask
        state: latest
    - name: install gunicorn
      pip:
        executable: pip3
        name: gunicorn
        state: latest

    - name: createnew directory
      file:
              path: "/home/flask-app/"
              state: directory

    - name: copy app.py to webservers
      template:
        src: "service.py"
        dest: "/home/flask-app/app.py"


    - name: start flask app
      shell: |
        cd /home/flask-app/
        gunicorn --bind 0.0.0.0:5000 app:app&  

    - name: install snmpd
      apt:
              name: snmpd
              state: latest
    
    - name: cpy snmpd conf file
      template:
              src: snmpd.conf.j2
              dest: "/etc/snmp/snmpd.conf"
    - name: run snmpd
      service:
              name: snmpd
              state: restarted

- hosts: primary_proxy
  become: yes
  vars:
    host_name: "{{ inventory_hostname }}"
    node_state: MASTER
    node_priority: 101
    virtual_ip: "{{ lookup('file', './addr_vip') }}"
  tasks:
    - name: configure keepalived
      template:
        src: keepalived.conf.j2
        dest: /etc/keepalived/keepalived.conf

- hosts: backup_proxy
  become: yes
  vars:
    host_name: "{{ inventory_hostname }}"
    node_state: BACKUP
    node_priority: 100
    virtual_ip: "{{ lookup('file', './addr_vip') }}"
  tasks:
    - name: configure keepalived
      template:
        src: keepalived.conf.j2
        dest: /etc/keepalived/keepalived.conf

- hosts: HAproxy
  become: yes
  tasks:
    - name: Ensure Keepalived service is running
      systemd:
        name: keepalived
        enabled: yes
    - name: restart keepalived
      service:
        name: keepalived
        state: restarted
    - name: start keepalived
      service:
        name: keepalived
        state: started

- hosts: bastion
  gather_facts: yes
  become: true
  tasks:
    - name: sudo wait
      become: yes
      shell: while sudo fuser /var/lib/dpkg/lock >/dev/null 2>&1; do sleep 5; done;
    - name: gather server ip addresses
      setup:
        filter: ansible_default_ipv4.address
    - name: Copy script to server
      copy:
        src: monitoringsolution.sh
        dest: monitoringsolution.sh
        mode: "0755"
    - name: Execute script
      command: bash monitoringsolution.sh
    - name: copy prometheus.yml
      template:
        src: prometheus.yml.j2
        dest: /etc/prometheus/prometheus.yml
    - name: Restart prometheus
      systemd:
        name: prometheus
        state: restarted

- hosts: webservers
  name: Install Node exporter on nodes
  gather_facts: yes
  become: true
  tasks:
    - name: gather server ip addresses
      setup:
        filter: ansible_default_ipv4.address
    - name: sudo wait
      become: yes
      shell: while sudo fuser /var/lib/dpkg/lock >/dev/null 2>&1; do sleep 5; done;
    - name: Configuring Dependencies
      copy:
        src: node_exporter.sh
        dest: node_exporter.sh
        mode: "0755"
    - name: Execute script
      command: bash node_exporter.sh
